.ClassMaker(@range, @arr, @cls, @prop, @u: 1px) {
    .common(@v) {
        &.@{cls}@{v} { @{prop}: @v * @u !important;}
    }
    .mLoop(@start, @end, @step) when (@end >= @start) {
        .common(@start);
        .mLoop((@start + @step), @end, @step);
    }
    each(@arr, {
        .common(@value);
    });
    .mLoop(@range[start], @range[end], @range[step]);
}

/**
* 字体大小生成 eg: f12
* @range: start, end, step
* @arr: num1, num2, num3
*/
.FontSize(@range, @arr) {
    each(@arr, {
        .f@{value} { font-size: @value * 1px !important; }
    });
    .fontSizeLoop(@start, @end, @step ) when( @end >= @start ){
        .f@{start}{ font-size: @start * 1px !important}
        .fontSizeLoop((@start + @step), @end, @step);
    }
    .fontSizeLoop(@range[start], @range[end], @range[step])
}

/**
* 文本行高 eg: lh14 => line-height: 14px;
* @range: start, end, step
* @arr: num1, num2, num3
*/
.LineHeight(@range, @arr) {
    each(@arr, {
        .lh@{value} { line-height: @value * 1px !important; }
    });
    .lineHeightLoop(@start, @end, @step) when (@end >= @start) {
        .lh@{start} { line-height: @start * 1px !important;}
        .lineHeightLoop((@start + @step), @end, @step);
    };
    .lineHeightLoop(@range[start], @range[end], @range[step])
}

/**
* 边距大小样式
* @range: start, end, step
* @arr: num1, num2, num3
* .pd*、.pt*、.pb*、.pl*、.pr*、 .ptb*、 .plr*
* .mg*、.mt*、.mb*、.ml*、.mr*、 .mtb*、 .mlr*
*/
.Pdmg(@range, @arr) {
    .common(@v) {
        .pd@{v} { padding: (1px * @v) !important;}
        .pt@{v} { padding-top: (1px * @v) !important;}
        .pb@{v} { padding-bottom: (1px * @v) !important;}
        .ptb@{v} {
            padding-top: (1px * @v) !important;
            padding-bottom: (1px * @v) !important;
        }
        .pl@{v} {padding-left: (1px * @v) !important;}
        .pr@{v} { padding-right: (1px * @v) !important;}
        .plr@{v} {
            padding-left: 1px * @v !important;
            padding-right: 1px * @v  !important;
        }
        .mg@{v} { margin: (1px * @v) !important;}
        .mt@{v} { margin-top: (1px * @v) !important;}
        .mb@{v} { margin-bottom: (1px * @v) !important;}
        .mtb@{v} { 
            margin-top: (1px * @v) !important;
            margin-bottom: (1px * @v) !important;
        }
        .ml@{v} { margin-left: (1px * @v) !important; }
        .mr@{v} { margin-right: (1px * @v) !important; }
        .mlr@{v} { 
            margin-left: (1px * @v) !important;
            margin-right: (1px * @v) !important;
        }
    }
    .pdmgLoop(@start, @end, @step) when (@end >= @start){
        .common(@start);
        .pdmgLoop((@start + @step), @end, @step)
    }
    each(@arr, {
        .common(@value);
    });
    .pdmgLoop(@range[start], @range[end], @range[step]);
}

/**
* 高度，最大高度， 最小高度
* @range: start, end, step
* @arr: num1, num2, num3
*/
.Height(@range, @arr, @u: 1px, @s: h) {
    .common(@v) {
        .min-@{s}@{v} { min-height: @v * @u !important; }
        .max-@{s}@{v} { max-height: @v * @u !important; }
        .@{s}@{v} { height: @v * @u !important;}
    }
    .heightLoop(@start, @end, @step) when (@end >= @start) {
        .common(@start);
        .heightLoop((@start + @step), @end, @step);
    }
    each(@arr, {
        .common(@value);
    });
    .heightLoop(@range[start], @range[end], @range[step]);
}


/**
* 宽度，最大宽度， 最小宽度 eg: lh14 => line-height: 14px;
* @range: start, end, step
* @arr: num1, num2, num3
* @u: 1px
* @s: w
*/
.Width(@range, @arr, @u: 1px, @s: w) {
    .common(@v) {
        .min-@{s}@{v} { min-width: @v * @u !important; }
        .max-@{s}@{v} { max-width: @v  * @u !important; }
        .@{s}@{v} {  width: @v * @u !important; }
    }
    .widthLoop(@start, @end, @step) when (@end >= @start) {
        .common(@start);
        .widthLoop((@start + @step), @end, @step);
    }
    each(@arr, {
        .common(@value);
    });
    .widthLoop(@range[start], @range[end], @range[step]);
}

.Absolute(@range, @directionsPoint) {
    @directions: top, bottom, left, right;
    .absolute {
        position: absolute !important;
        &.full {
            each(@directions, {
                @{value}: 0;
            })
        }
        each(@directions, {
            &.unset-@{value} { @{value}: auto; }
        })
        .ClassMaker(@range, @directionsPoint[tops], top, top);
        .ClassMaker(@range, @directionsPoint[bottoms], bottom, bottom);
        .ClassMaker(@range, @directionsPoint[lefts], left, left);
        .ClassMaker(@range, @directionsPoint[rights], right, right);
    }
}

.BorderRadius(@start, @end, @step) when (@start <= @end) {
    .rounded@{start} { border-radius: 2px * @start !important;}
    // 各个角度 情况过多不写
    // https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-radius
    .BorderRadius((@start + @step), @end, @step);
}

.Overflow() {
    .x-scroll { overflow-x: scroll;}
    .y-scroll { overflow-y: scroll;}
    .xy-scroll, .scroll { overflow: scroll; }
    .x-auto { overflow-x: auto !important;}
    .y-auto { overflow-y: auto !important;}
    .xy-auto { overflow: auto !important; }
    .x-no-scroll { overflow-x: hidden !important;}
    .y-no-scroll { overflow-y: hidden !important;}
    .no-scroll { overflow: hidden !important; }
}

.BoxSize() {
    .border-box { box-sizing: border-box; }
    .content-box { box-sizing: content-box; }
}

// display 属性
.Dislay() {
    .hide { display: none !important; }
    .block { display: block !important; }
    .inline-block { display: inline-block !important; }
    .inline { display: inline !important; }
    .flex { display: flex !important; }
}

// 文档定位
.Position() {
    .relative { position: relative !important;}
    .absolute { position: absolute !important;}
    .fixed { position: fixed !important;; }
}
.Float() {
    .fl { float: left !important; }
    .fr { float: right !important; }
    .clearfix {
        *zoom: 1;
        &:after {
            clear: both;
            height: 0;
            display: block;
            visibility: hidden;
            content: "";
        }
    }
}

// 文本对齐
.TextAlign() {
    .text-left { text-align: left; }
    .text-center { text-align: center; }  
    .text-right { text-align: right; }
}

/**
* 超出多少行点点点 eg: text-hide-2
*/
.TextHideNum(@num) {
    .text-hide {
        display: block;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
    each(range(@num), {
        .text-hide-@{value} {
            overflow : hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: @value;
            -webkit-box-orient: vertical;
        }
    });
    
}